#!/bin/bash
# By Phillip Kittelson
# Adapted script from Chris Greer @packetpioneer
# 20220910
# v0.7

# Create folderName variable with today's date, and create folder
folderName="$(date +"%d-%m-%Y")"
mkdir $folderName

# Loop through each PCAP file in the current folder, use tshark to apply filter, dump each into a separate PCAP
for f in *.pcap; do tshark -r $f -Y "dns" -w $folderName/dns-$f; done
for f in *.pcap; do tshark -r $f -Y "!tcp.port in {22,23,25,80,443,445,993,995,8000..8005} or not dns" -w $folderName/strangeports-$f; done
for f in *.pcap; do tshark -r $f -Y "tcp.port==3389" -w $folderName/RDP-$f; done
for f in *.pcap; do tshark -r $f -Y "tls.handshake.version < 0x0303" -w $folderName/TLSVer-$f; done
for f in *.pcap; do tshark -r $f -Y "tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size<=1024" -w $folderName/nmap-$f; done
for f in *.pcap; do tshark -r $f -Y "ip.geoip.country_iso in {CN,RU,NK}" -w $folderName/country-$f; done

# Output HTTP User Agents to a text file
for f in *.pcap; do tshark -r *.pcap -Y http.request -T fields -e http.host -e http.user_agent | sort | uniq -c | sort -n | tee $folderName/http.user_agent.txt; done

# Merge indivdiual PCAPs into categories
mergecap -w $folderName/allDNS.pcapng $folderName/dns-*
mergecap -w $folderName/allRDP.pcapng $folderName/RDP-*
mergecap -w $folderName/allSTRANGE.pcapng $folderName/strangeports-*
mergecap -w $folderName/allTLSVer1.pcapng $folderName/TLSVer-*
mergecap -w $folderName/allNMAP.pcapng $folderName/nmap-*
mergecap -w $folderName/allBADCN.pcapng $folderName/country-*

# Cleanup extra files
rm $folderName/dns-* $folderName/strangeports-* $folderName/TLSVer-* $folderName/nmap-* $folderName/country-* $folderName/RDP-*
